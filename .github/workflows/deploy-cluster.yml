name: Deploy Cluster
run-name: ${{ github.actor }}
on: [push]

env:
  RESOURCE_GROUP_NAME: terraform-state
  STORAGE_ACCOUNT_NAME: tfstate13527
  CONTAINER_NAME: tfstate

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:

    - uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Run Terraform Setup Script
      uses: azure/cli@v2
      with:
        azcliversion: latest
        inlineScript: |

          # Create resource group
          az group create --name $RESOURCE_GROUP_NAME --location uksouth

          # Create storage account
          az storage account create --resource-group $RESOURCE_GROUP_NAME --name $STORAGE_ACCOUNT_NAME --sku Standard_LRS --encryption-services blob

          # Create blob container
          az storage container create --name $CONTAINER_NAME --account-name $STORAGE_ACCOUNT_NAME

  plan:
    needs: setup
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: '4131c778-4071-4b94-a8e5-68d03a700848'
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: '0094462a-a615-4c45-86cb-d36510ad6456'
      ARM_TENANT_ID: 'c541516e-f75d-4868-b472-ea924b5ddee3'
    defaults:
      run:
        working-directory: terraform/
    steps:
    - uses: actions/checkout@v4

    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.6.6"

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true
  
    - name: Terraform Init
      id: init
      run: terraform init -backend-config=backend_config/dev.conf
    
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -input=false

    - name: Terraform Apply
      id: apply
      run: terraform apply --auto-approve